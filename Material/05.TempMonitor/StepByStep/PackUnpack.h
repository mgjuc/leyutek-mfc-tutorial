/*********************************************************************************************************
* 模块名称: PackUnpack.h
* 摘    要: 串口接收，发送，对数据的打包，解包；响应数据包，定时检查下位机的回答
* 当前版本: 1.0.0
* 作    者: Leyutek(COPYRIGHT 2018 - 2021 Leyutek. All rights reserved.)
* 完成日期: 2021年01月22日 
* 内    容:
* 注    意: none                                                                  
**********************************************************************************************************
* 取代版本:	 
* 作    者:
* 完成日期: 
* 修改内容:
* 修改文件: 
*********************************************************************************************************/
#ifndef PACKUNPACK_H
#define PACKUNPACK_H

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "PacketBuf.h"
#include "UART.h"
#include "Afxmt.h"   //用到CCriticalSection类

/*********************************************************************************************************
*                                                宏定义
*********************************************************************************************************/
//定义一个函数指针类型MsgHandle，这个函数类型是这样：返回值void 参数：uchar* 
typedef void (*MsgHandle)(UCHAR*);

/*********************************************************************************************************
*                                              结构体定义
*********************************************************************************************************/

/*********************************************************************************************************
*                                               类的定义
*********************************************************************************************************/
class  CPackUnpack
{
public:
  
    CPacketBuf  mPacksReceived;                           //接收buffer
    CUART       mUART;
    int         mErrorPack;
    
    int OpenPort(int port, int baudRate, int parity);     //打开串口
    
    CPackUnpack(int maxPackID);
    virtual ~CPackUnpack();

    void  Initialize(void);                             //这个模块中的变量在这里初始化
    void  ReceivePack(UCHAR *pData, DWORD dwLen);       //从字节流中创建数据包
    bool  SendPack(PacketFrame);                        //发送包

    static int ReceiveProc(void *pData, DWORD dwLen, void *pThis);
  
private:
    bool        mPackIdGot;             //接收到包ID的标志位
    UCHAR       mCurrPackLen;          
    UCHAR       mRestByte;              //剩余字节数
    PacketFrame mCurrPack;              //从接收字符流解析出的数据包临时存放在这里,它处在不断更新中;
    //如果需要得到最新的数据包,应该从mPacksReceived去取得;
    int         mMaxPackID;
    CCriticalSection   mSynSection;     //用于保证对外的接口可以重入，使用临界段保护数据；
    
    bool  IsPackData( UCHAR );          //检查给定的字符是否是合法的数据包数据
    bool  UnpackWithCheckSum(UCHAR*);   //带校验和的解包
    void  PackWithCheckSum(UCHAR*);     //带校验和的打包
};

/*********************************************************************************************************
*                                               函数声明
*********************************************************************************************************/
  

#endif