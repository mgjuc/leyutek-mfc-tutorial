/*********************************************************************************************************
* 模块名称: send.cpp
* 摘    要: 指令发送函数定义，所有通讯协议中指令的打包，发送过程；
* 当前版本: 1.0.0
* 作    者: Leyutek(COPYRIGHT 2018 - 2021 Leyutek. All rights reserved.)
* 完成日期: 2021年01月22日
* 内    容:
* 注    意:                                                                 
**********************************************************************************************************
* 取代版本: 
* 作    者:
* 完成日期: 
* 修改内容:
* 修改文件: 
*********************************************************************************************************/

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "pch.h"
#include "Send.h"
#include "ParamMonitorDlg.h"

/*********************************************************************************************************
*                                               函数实现
*********************************************************************************************************/
/*********************************************************************************************************
* 函数名称: SendPacket
* 函数功能: 发送包
* 输入参数: packet-待发送的数据包
* 输出参数:
* 返 回 值: 成功返回true
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool  SendPacket(PacketFrame packet)
{
	return ((CParamMonitorDlg*)gWndP)->mPackUnpack.SendPack(packet);
}

/*********************************************************************************************************
* 函数名称: NIBPStart
* 函数功能: 发送命令开始测量
* 输入参数:
* 输出参数:
* 返 回 值: 成功返回true
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool  NIBPStart()
{
	PacketFrame  packSent;

	packSent.id  = CMD_NIBP;
	packSent.id2 = CMD_NIBP_START;

	return SendPacket(packSent);
}

/*********************************************************************************************************
* 函数名称: NIBPStop
* 函数功能: 发送命令终止测量
* 输入参数:
* 输出参数:
* 返 回 值: 成功返回true
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool  NIBPStop()
{
	PacketFrame  packSent;

	packSent.id  = CMD_NIBP;
	packSent.id2 = CMD_NIBP_END;

	return SendPacket(packSent);
}

/*********************************************************************************************************
* 函数名称: NIBPReset
* 函数功能: 发送命令复位NIBP模块
* 输入参数:
* 输出参数:
* 返 回 值: 成功返回true
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool  NIBPReset()
{
	PacketFrame  packSent;
	
	packSent.id  = CMD_NIBP;
	packSent.id2 = CMD_NIBP_RST;
	
	return SendPacket(packSent);
}

/*********************************************************************************************************
* 函数名称: ReqNIBPResult
* 函数功能: 发送NIBP测量结果
* 输入参数:
* 输出参数:
* 返 回 值: 成功返回true
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool  ReqNIBPResult()
{
	PacketFrame  packSent;
	
	packSent.id  = CMD_NIBP;
	packSent.id2 = CMD_NIBP_RELT;
	
	return SendPacket(packSent);
}

/*********************************************************************************************************
* 函数名称: ReqNIBPStatus
* 函数功能: 发送命令请求NIBP状态
* 输入参数:
* 输出参数:
* 返 回 值: 成功返回true
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool  ReqNIBPStatus()
{
	PacketFrame  packSent;
	
	packSent.id  = CMD_NIBP;
	packSent.id2 = CMD_NIBP_QUARY_STS;
	
	return SendPacket(packSent);
}

