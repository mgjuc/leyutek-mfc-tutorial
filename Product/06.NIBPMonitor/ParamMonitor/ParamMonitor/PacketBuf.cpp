/*********************************************************************************************************
* 模块名称: PacketBuf.cpp
* 摘    要: 类CPacketBuf用于保存符合通讯协议的数据包，并提供读、写的接口 
* 当前版本: 1.0.0
* 作    者: Leyutek(COPYRIGHT 2018 - 2021 Leyutek. All rights reserved.)
* 完成日期: 2021年01月22日
* 内    容:
* 注    意:                                                                 
**********************************************************************************************************
* 取代版本: 
* 作    者:
* 完成日期: 
* 修改内容:
* 修改文件: 
*********************************************************************************************************/

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "pch.h"
#include "PacketBuf.h"

/*********************************************************************************************************
*                                               函数实现
*********************************************************************************************************/
/*********************************************************************************************************
* 函数名称: CPacketBuf
* 函数功能: 构造函数
* 输入参数:
* 输出参数:
* 返 回 值:
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
CPacketBuf::CPacketBuf(void)
{
    Initialize();
}

/*********************************************************************************************************
* 函数名称: Initialize
* 函数功能: 初始化函数，将所有指针初始化为0，让缓冲区为空
* 输入参数:
* 输出参数:
* 返 回 值:
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
void CPacketBuf::Initialize(void)
{
    mGetNdx = 0;
    mPutNdx = 0;
}

/*********************************************************************************************************
* 函数名称: Get
* 函数功能: 从缓冲区获取一个数据包并将其保存到外部
* 输入参数:
* 输出参数: out-用于存储输出数据包的地址
* 返 回 值: false，如果缓冲区为空，则操作失败， true，如果缓冲区有字符，操作成功
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool CPacketBuf::Get(PacketFrame* outFrame)
{
  if (mGetNdx == mPutNdx)
  {
      return false;
  }
  *outFrame = mBuffer[mGetNdx];

  mGetNdx++;

  if (MAX_PACK_NUM <= mGetNdx)  //MAX_PACK_NUM = 100  
  {
      mGetNdx = 0;
  }
  return true;
}

/*********************************************************************************************************
* 函数名称: UnGet
* 函数功能: 把从缓冲区取得的数据包返回缓冲区内
* 输入参数:
* 输出参数:
* 返 回 值: false，如果数据包被覆盖，不能删除，true-成功
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool CPacketBuf::UnGet(void)
{
  INT  ptr = mGetNdx;

  ptr--;
  if (0 > ptr)
  {
      ptr = MAX_PACK_NUM - 1;  //MAX_PACK_NUM = 100
  }
  if (ptr == mPutNdx)
  {
      return false;
  }

  mGetNdx = ptr;

  return true;
}

/*********************************************************************************************************
* 函数名称: Put
* 函数功能: 将一个数据包放入缓冲区
* 输入参数: in-打包的包
* 输出参数:
* 返 回 值: false，如果缓冲区已满，操作失败，true，如果缓冲区不满，成功
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool  CPacketBuf::Put(PacketFrame& inFrame)
{
    INT  ptr = mPutNdx;

    ptr++;
    if (MAX_PACK_NUM <= ptr)   //MAX_PACK_NUM = 100   
    {
        ptr = 0;
    }

    if (ptr == mGetNdx)
    {
        return false;
    }

    mBuffer[mPutNdx] = inFrame;

    mPutNdx = ptr;

    return true;
}

/*********************************************************************************************************
* 函数名称: IsEmpty
* 函数功能: 检查缓冲区是否为空
* 输入参数: in-打包的包
* 输出参数:
* 返 回 值: true，缓冲区为空，false，缓冲区不为空
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
bool CPacketBuf::IsEmpty(void)
{
    return  (mGetNdx == mPutNdx);
}
