/*********************************************************************************************************
* 模块名称: Task.cpp
* 摘    要: 多媒体定时器执行函数定义，系统中其他线程的定义；CUART类
*           中会自动启动一个线程；
* 当前版本: 1.0.0
* 作    者: Leyutek(COPYRIGHT 2018 - 2021 Leyutek. All rights reserved.)
* 完成日期: 2021年01月22日
* 内    容:
* 注    意:                                                                 
**********************************************************************************************************
* 取代版本: 
* 作    者:
* 完成日期: 
* 修改内容:
* 修改文件: 
*********************************************************************************************************/

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "pch.h"
#include "Task.h"
#include "Global.h"
#include "Procmsg.h"

/*********************************************************************************************************
*                                               内部变量
*********************************************************************************************************/
static int  sCounter     = 0;      //多媒体定时时间隔计数器
static int  sSecondtimer = 0;      //1s计数器

/*********************************************************************************************************
*                                               函数实现
*********************************************************************************************************/
/*********************************************************************************************************
* 函数名称: MediaTimerProc
* 函数功能: 多媒体定时器， 周期：20ms；
* 输入参数:
* 输出参数:
* 返 回 值:
* 创建日期: 2021年01月22日
* 注    意:
*********************************************************************************************************/
void CALLBACK MediaTimerProc( UINT wTimerID, UINT msg, DWORD dwUser, DWORD dw1, DWORD dw2 )
{
	sCounter++;

	//等待的结果； 后面定时检查响应情况的函数延迟调用；timerCmdProc
	if(400 > sCounter * TIME_TICK)      //TIME_TICK单位: ms; 定义多媒体定时器的时间间隔;
	{
		return ;
	}

	sCounter = 400 / TIME_TICK + 5;     //Counter = 25
	
	sSecondtimer++;
	if ((1000 / TIME_TICK ) <= sSecondtimer)                 //判断1s时间是否到,secondtimer >= 50
	{
		sSecondtimer = 0;
		::PostMessage(HWND(dwUser), WM_SECOND_TIMER, 0, 0);  //激活1秒钟的定时处理过程；
	}
}
